---
title: "Class 9: Halloween Mini-Project"
author: "Raquel Gonzalez (A16207442)"
format: pdf
editor: visual
---


Here we analyze a candy dataset from the 538 website. This is a CSV file from their GitHub repository.

## Data Import


```{r}
candy <- read.csv("candy-data.csv", row.names = 1)
head(candy)
```


> Q1: How many different candy types are in this dataset?


```{r}
nrow(candy)
```

There are 85 different candy types in this dataset

> Q2: How many fruity candy types are in the dataset?


```{r}
sum(candy$fruity)
```

There are 38 fruity candy types in the dataset.

## Data Exploration

>Q3: What is your favorite candy in the dataset and what is its `winpercent` value?


```{r}
candy["Sour Patch Kids",]$winpercent
```

My favorite candy is Sour Patch Kids. Its win percent is 59.86%.

> Q4: What is the `winpercent` value for "Kit Kat"


```{r}
candy["Kit Kat",]$winpercent
```

The win percent for Kit Kat is 76.77%

> Q5: What is the `winpercent` value for "Tootsie Roll Snack Bars"?


```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

The win percent for Tootsie Roll Snack Bars is 49.65%

> Q: What is the least liked candy in the dataset - lowest winpercent?


```{r}
inds <- order(candy$winpercent)
head(candy[inds,])
```

The least liked candy is Nik L Nip with a win percent of 22.45%


```{r}
library(skimr)
skim(candy)
```


> Q6: Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The row `winpercent` looks to be on a different scale (much larger) to the majority of the other columns in the dataset. 

> Q7: What do you think a zero and one represent for the `candy$chocolate` column?

Zero and One represent True/False values. The candy gets a zero if it is not chocolate (false) and a one if it is chocolate (true).

> Q8: Plot a histogram of winpercent values


```{r}
library(ggplot2)
ggplot(candy, aes(winpercent)) +
  geom_histogram(bins = 15)
```



> Q9: Is the distribution of win percent values symmetrical?

The distribution of win percent values is skewed. 

> Q10: Is the center of the distribution above or below 50%?

The center of distribution is below 50%

> Q11: On average is chocolate candy higher or lower ranked than fruit candy?

First, find all chocolate candy and their $winpercent values.

Next, summarize these values into one number.

Then, do the same for fruity candy and compare the numbers.


```{r}
mean(candy$winpercent[as.logical(candy$chocolate)])
```

```{r}
mean(candy$winpercent[as.logical(candy$fruity)])
```


On average, chocolate candy is ranked higher than fruity candy (60.92% > 44.12%).

> Q12: Is this difference statistically significant?


```{r}
t.test(candy$winpercent[as.logical(candy$chocolate)],candy$winpercent[as.logical(candy$fruity)])
```


These results are statistically significant with a p-value of 2.87e-08.

## Overall Candy Rankings

> Q13: What are the five least liked candy types in this set?


```{r}
library(dplyr)
candy %>%
  arrange(winpercent) %>%
  head(5)
```

 
The top 5 least liked candies are Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters.

> Q14: What are the top 5 all time favorite candy types out of this set?


```{r}
candy %>%
  arrange(winpercent) %>%
  tail(5)
```

The top 5 all time favorite candy types are Reese's Peanut Butter Cup, Reese's Miniatures, Twix, Kit Kat, and Snickers. 

> Q15: Make a first barplot of candy ranking based on winpercent values.


```{r}
ggplot(candy, aes(winpercent, rownames(candy))) +
  geom_col()
```


> Q16: This is very ugly, use the `reorder()` function to get the bars sorted by `winpercent`?


```{r}
ggplot(candy, aes(winpercent, reorder(rownames(candy), winpercent))) + 
  geom_col() + 
  labs(x = "Win Percent", y = NULL)

# Still ugly. Can we adjust the labels so we can read them better?
ggsave('barplot1.png', width = 7, height = 10)
```

![](barplot1.png)

You can insert any image using this markdown syntax. 
`![](barplot1.png)`

Now let's add color to our ggplot. We need to make a custom color vector.


```{r}
# Start with an all black vector of colors.
my_cols <- rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "deeppink4"
my_cols[as.logical(candy$bar)] = "palevioletred3"
my_cols[as.logical(candy$fruity)] = "plum3"
```

```{r}
ggplot(candy, aes(winpercent, reorder(rownames(candy), winpercent))) + 
  geom_col(fill = my_cols) + 
  labs(x = "Win Percent", y = NULL)
```

```{r}
ggsave('barplot2.png', width = 7, height = 10)
```


![](barplot2.png)

> Q17: What is the worst ranked chocolate candy?

The worst ranked chocolate candy is Sixlets.

> Q18: What is the best ranked fruity candy?

The best ranked fruity candy is Starburst. 

## Taking a look at pricepercent


```{r}
candy$pricepercent
```


if we want to see what is a good candy to buy in terms of winpercent and pricepercent, we can plot these two variables and then see the best candy for the least amount of money. 


```{r}
ggplot(candy) + 
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text()
```


To avoid the overplotting of all these labels we can use an add on package called ggrepl. 


```{r}
library(ggrepel)
ggplot(candy) + 
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel()
```


Play with the `max.overlaps` parameter on `geom_text_repel`.


```{r}
ggplot(candy) + 
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(max.overlaps=5, col=my_cols, size = 3.3)
```


> Q19: Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's miniatures have the highest `winpercent` for the lowest `pricepercent`.

> Q20: What are the top 5 most expensive candy types in the dataset and of these which is the least popular?


```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

The top 5 most expensive candies are Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, and Hershey's Milk Chocolate. The least popular of these is Nik L Nip.

# 5 Exploring the correlation structure. 


```{r}
library(corrplot)
cij <- cor(candy)
corrplot(cij)
```


> Q22: Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and chocolate are two variables that are anticorrelated.

> Q23: Similarly, what two variables are most positively correlated? 

Chocolate and winpercent are the two variables that are the most positively correlated.  
 
# On to PCA 

The main function for this is called `prcom()` and here we know we need to scale our data with the `scale=TRUE` argument. 


```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
ggplot(my_data) +
  aes(PC1, PC2, label = rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(col=my_cols) +
  labs(title="PCA Candy Space Map", subtitle = "Colored by type: chocolate bar (pink), chocolate other (burgundy), fruity (lavender), other (black)", caption= "Data from 538")
```


## Loadings Plot


```{r}
loadings <- as.data.frame(pca$rotation)

ggplot(loadings) +
  aes(PC1, reorder(rownames(loadings), PC1)) +
  geom_col()
```

> Q24: What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

The fruity, pluribus, and hard variables are picked up strongly by PC1 in the positive direction. This makes sense, as these variables are all correlated with each other, whereas the remaining variables in the negative direction are all correlated with each other. 

